1. access 로그 직접 컨트롤
input {
  file {
    path => "/tmp/*_log"
  }
}

filter {
  if [path] =~ "access" {
    mutate { replace => { type => "apache_access" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  } else if [path] =~ "error" {
    mutate { replace => { type => "apache_error" } }
  } else {
    mutate { replace => { type => "random_logs" } }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}

2.syslog
input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}


3.2016서울시 지하철 정보 분석
https://www.elastic.co/kr/blog/seoul-metro-2014

1) 매핑
-XPUT '<host url>:[9200|9243]/seoul-metro-2016
  {
    "mappings" : {
      "seoul-metro" : {
        "properties" : {
          "line_num" : {
            "type" : "integer"
          },
          "line_num_en" : {
            "type" : "keyword"
          },
          "people_in" : {
            "type" : "integer"
          },
          "people_out" : {
            "type" : "integer"
          },
          "station_geo" : {
            "type" : "geo_point"
          },
          "station_name" : {
            "type" : "keyword"
          },
          "station_name_ch" : {
            "type" : "keyword"
          },
          "station_name_chc" : {
            "type" : "keyword"
          },
          "station_name_en" : {
            "type" : "keyword"
          },
          "station_name_jp" : {
            "type" : "keyword"
          },
          "station_name_kr" : {
            "type" : "keyword"
          },
          "time_slot" : {
            "type" : "date"
          }
        }
      }
    }
  }



2) metro.conf 생성
input {
  file {
    codec => json
    path => "/home/ec2-user/metro_data/*.log"
    start_position => "beginning"
  }
}

filter{
  mutate {
    remove_field => [ "@version", "@timestamp", "host", "path" ]
  }
}

output{
  elasticsearch{
    hosts => ["127.0.0.1:9200"]
    index => "seoul-metro-2016"
    document_type => "seoul-metro"
  }
}




3) nginx 분석
sudo yum install nginx
sudo service nginx start
sudo chown -R ec2-user.ec2-user /var/log/nginx /usr/share/nginx/html
echo "<h1>Hello World</h1>" > /usr/share/nginx/html/hello.html



vi nginx.conf
input {
        file {
                path => "/var/log/nginx/access.log"
                start_position => beginning
        }
}

filter {
        grok {
                match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        geoip {
                source => "clientip"
        }
}
output {
  elasticsearch{
    hosts => ["127.0.0.1:9200"]
    index => "nginx_log"
    document_type => "log"
  }
  stdout {}
}


- 파일비트랑 함께 사용하기
wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.1.1-linux-x86_64.tar.gz
tar zxvf filebeat-5.1.1-linux-x86_64.tar.gz
cd filebeat-5.1.1-linux-x86_64
sudo ./filebeat -e -c filebeat.yml  (데몬 실행)

vi filebeat.yml

  # Paths that should be crawled and fetched. Glob based paths.
  paths:
    - /var/log/nginx/access.log
  document_type: access
    #- c:\programdata\elasticsearch\logs\*
- input_type: log
  paths:
    - /var/log/nginx/error.log
  document_type: error


  이하 생략

  output.logstash:
    # The Logstash hosts
    hosts: ["localhost:5044"]

  이하 생략


vi nginx_with_beat.conf
input {
k
}

filter {
        if [type] == "access" {
            mutate {
               add_field => { "log_type" => "access" }
            }
        } else if [type] == "error" {
            mutate {
               add_field => { "log_type" => "error" }
            }
        }
        grok {
                match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        geoip {
                source => "clientip"
        }
}
output {
  elasticsearch{
    hosts => ["127.0.0.1:9200"]
    index => "nginx_log_beat"
    document_type => "log"
  }
  stdout {}
}

날짜별 저장
index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
document_type => "%{[@metadata][type]}"


- 키바나 설치

wget https://artifacts.elastic.co/downloads/kibana/kibana-5.1.1-linux-x86_64.tar.gz
tar xvf kibana-5.1.1-linux-x86_64.tar.gz
cd kibana-5.1.1-linux-x86_64
bin/kibana



.es(timefield="time_slot",index="seoul-metro-2016",metric=sum:people_in,q=station_name:상왕십리).label("상왕십리역"),.es(timefield="time_slot",index="seoul-metro-2016",metric=sum:people_in,q=station_name:왕십리).label("왕십리")


node1/config/jvm.options
-Dcom.sun.management.jmxremote
-Dcom.sun.management.jmxremote.port=9999
-Dcom.sun.management.jmxremote.rmi.port=9998
-Dcom.sun.management.jmxremote.ssl=false
-Dcom.sun.management.jmxremote.authenticate=false
-Djava.rmi.server.hostname=52.78.3.42



path.repo: ["/home/ec2-user/my_backup", "/home/ec2-user/longterm_backup"]